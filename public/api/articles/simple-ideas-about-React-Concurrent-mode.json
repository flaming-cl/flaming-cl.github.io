{"title":"Questions About React concurrent features","uid":"fb9f2e7d2bf6b72bb67731a251124487","slug":"simple-ideas-about-React-Concurrent-mode","date":"2023-02-06T17:21:10.000Z","updated":"2023-02-16T01:17:32.713Z","comments":true,"path":"api/articles/simple-ideas-about-React-Concurrent-mode.json","keywords":null,"cover":[],"content":"<summary>Do React concurrent features mean multitasking?</summary>\nNo. React concurrent features are not about multitasking.\nThis is because the JavaScript engine is single-threaded (can only do one thing at one time).\nSo there is no magic for React to simultaneously handle user events while rendering a large list.\n\n<h3 id=\"If-so-what-does-React-do-to-avoid-stutters-when-running-CPU-heavy-tasks\"><a href=\"#If-so-what-does-React-do-to-avoid-stutters-when-running-CPU-heavy-tasks\" class=\"headerlink\" title=\"If so, what does React do to avoid stutters when running CPU heavy tasks?\"></a>If so, what does React do to avoid stutters when running CPU heavy tasks?</h3><p>In fact, React tries to avoid CPU bottlenecks by running one task, stopping it, running another, and so forth.<br>Sounds like a micro operating system, right? </p>\n<p>But concurrent features will not allow tasks to freely compete for sources.<br>Instead, they will label different tasks with different priority: low priority running tasks will yield the main thread to high priority tasks to ensure performance.</p>\n<p>This is quite similar to how we answer a second phone call:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Assume there comes a food delivery call, while we are calling a friend for a casual chat.<br>Since a food delivery call is more urgent than a casual chat, we hold the chat and answer the delivery call.</p></blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/51183663/217071662-a89bd48e-beb5-4a82-ab62-7f36f7ab15fe.png\" alt=\"calls\"></p>\n<p>React does the same thing. It can pause a less prioritized rendering task and yield to more urgent tasks, such as keyboard events. This is implemented as concurrent features since React 18.</p>\n<h3 id=\"Can-you-give-some-examples-about-React-concurrent-features\"><a href=\"#Can-you-give-some-examples-about-React-concurrent-features\" class=\"headerlink\" title=\"Can you give some examples about React concurrent features?\"></a>Can you give some examples about React concurrent features?</h3><p>Concurrent features: startTransition(), useTransition(), useDeferredValue()<br>By using the above APIs, you are telling React to give lower priority to things you put in them. </p>\n<p>1）useDeferredValue(value)</p>\n<ul>\n<li>example: input value of a search bar</li>\n<li>result: updates of the input value will be deferred, just like what “debounce” does</li>\n</ul>\n<p>2）startTransition(callback)</p>\n<ul>\n<li>example: a function to update a large list</li>\n<li>result: When updating the large list, if there comes a keyboard event, React will pause the ongoing update and turn to the user event.</li>\n</ul>\n<h3 id=\"What-enables-React-to-run-the-concurrent-features\"><a href=\"#What-enables-React-to-run-the-concurrent-features\" class=\"headerlink\" title=\"What enables React to run the concurrent features?\"></a>What enables React to run the concurrent features?</h3><p>Time slicing.<br>After V16, React started to embrace time slicing to ensure an interruptible render phase.<br>This means React can insert urgent browser tasks among small tasks from the render phase to avoid stutter.</p>\n<p><img src=\"https://user-images.githubusercontent.com/51183663/217111897-7dacf96a-a574-410b-865b-c5e8ce3c3f5a.png\" alt=\"217070500-dc1bfbcf-31a5-4158-8d19-7870dbf99071\"><br>To understand more about time slicing, go to <a href=\"https://flaming-cl.github.io/bits-refinery/bits-refinery/2022/09/28/time-slicing-react/\">this post</a></p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p>[1] <a href=\"https://twitter.com/acdlite/status/977291318324948992\">Visualization of async rendering and synchronous rendering in React, Andrew Clark</a><br>[2] <a href=\"https://beta.reactjs.org/reference/react/useTransition\">useTransition, React Docs</a><br>[3] <a href=\"https://beta.reactjs.org/reference/react/useDeferredValue\">useDeferredValue, React Docs</a></p>\n","feature":true,"text":"Do React concurrent features mean multitasking? No. React concurrent features are not about multitasking. This is because the JavaScript eng...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"React","slug":"React","count":5,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#If-so-what-does-React-do-to-avoid-stutters-when-running-CPU-heavy-tasks\"><span class=\"toc-text\">If so, what does React do to avoid stutters when running CPU heavy tasks?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Can-you-give-some-examples-about-React-concurrent-features\"><span class=\"toc-text\">Can you give some examples about React concurrent features?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#What-enables-React-to-run-the-concurrent-features\"><span class=\"toc-text\">What enables React to run the concurrent features?</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#References\"><span class=\"toc-text\">References</span></a>","author":{"name":"flaming-cl","slug":"flaming-cl","avatar":"https://avatars.githubusercontent.com/u/51183663?s=400&u=7addc16053694c5fa5d328409bb44dc2d4d18e4a&v=4","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Is setState asynchronous?","uid":"d7e769e271f05380381ff271e09b897f","slug":"async-setState","date":"2023-02-07T20:07:27.000Z","updated":"2023-02-28T19:48:53.252Z","comments":true,"path":"api/articles/async-setState.json","keywords":null,"cover":null,"text":"Whether setState is synchronous or asynchronous has become a cliché these days. However, as React is constantly evolving, a frontend program...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"React","slug":"React","count":5,"path":"api/tags/React.json"}],"author":{"name":"flaming-cl","slug":"flaming-cl","avatar":"https://avatars.githubusercontent.com/u/51183663?s=400&u=7addc16053694c5fa5d328409bb44dc2d4d18e4a&v=4","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"React little by little 3 - Render Phase","uid":"adfd66f4376cbd49d3c1a235fa3bacdf","slug":"react-render-phase","date":"2023-01-13T13:41:00.000Z","updated":"2023-02-09T03:15:05.304Z","comments":true,"path":"api/articles/react-render-phase.json","keywords":null,"cover":[],"text":"Recap: Time Sliced Work LoopFrom the time slicing post, we have known React implements an interruptible render phase by a conditional while ...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"React","slug":"React","count":5,"path":"api/tags/React.json"}],"author":{"name":"flaming-cl","slug":"flaming-cl","avatar":"https://avatars.githubusercontent.com/u/51183663?s=400&u=7addc16053694c5fa5d328409bb44dc2d4d18e4a&v=4","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}